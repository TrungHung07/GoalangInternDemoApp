// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ClassesColumns holds the columns for the "classes" table.
	ClassesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "grade", Type: field.TypeInt64},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
	}
	// ClassesTable holds the schema information for the "classes" table.
	ClassesTable = &schema.Table{
		Name:       "classes",
		Columns:    ClassesColumns,
		PrimaryKey: []*schema.Column{ClassesColumns[0]},
	}
	// HistoriesColumns holds the columns for the "histories" table.
	HistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "table_name", Type: field.TypeString},
		{Name: "record_id", Type: field.TypeString},
		{Name: "action", Type: field.TypeString},
		{Name: "old_data", Type: field.TypeJSON, Nullable: true},
		{Name: "new_data", Type: field.TypeJSON, Nullable: true},
		{Name: "user_id", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "metadata", Type: field.TypeJSON, Nullable: true},
	}
	// HistoriesTable holds the schema information for the "histories" table.
	HistoriesTable = &schema.Table{
		Name:       "histories",
		Columns:    HistoriesColumns,
		PrimaryKey: []*schema.Column{HistoriesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "history_table_name_record_id",
				Unique:  false,
				Columns: []*schema.Column{HistoriesColumns[1], HistoriesColumns[2]},
			},
			{
				Name:    "history_action",
				Unique:  false,
				Columns: []*schema.Column{HistoriesColumns[3]},
			},
			{
				Name:    "history_created_at",
				Unique:  false,
				Columns: []*schema.Column{HistoriesColumns[7]},
			},
			{
				Name:    "history_user_id",
				Unique:  false,
				Columns: []*schema.Column{HistoriesColumns[6]},
			},
		},
	}
	// StudentsColumns holds the columns for the "students" table.
	StudentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "class_id", Type: field.TypeInt},
	}
	// StudentsTable holds the schema information for the "students" table.
	StudentsTable = &schema.Table{
		Name:       "students",
		Columns:    StudentsColumns,
		PrimaryKey: []*schema.Column{StudentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "students_classes_classes",
				Columns:    []*schema.Column{StudentsColumns[3]},
				RefColumns: []*schema.Column{ClassesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TeachersColumns holds the columns for the "teachers" table.
	TeachersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "grade", Type: field.TypeInt},
	}
	// TeachersTable holds the schema information for the "teachers" table.
	TeachersTable = &schema.Table{
		Name:       "teachers",
		Columns:    TeachersColumns,
		PrimaryKey: []*schema.Column{TeachersColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ClassesTable,
		HistoriesTable,
		StudentsTable,
		TeachersTable,
		UsersTable,
	}
)

func init() {
	StudentsTable.ForeignKeys[0].RefTable = ClassesTable
}
