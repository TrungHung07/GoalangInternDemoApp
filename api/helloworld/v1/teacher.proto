syntax = "proto3";

package helloworld.v1;
import "google/api/annotations.proto";

option go_package = "DemoApp/api/helloworld/v1;v1";

// Request để lấy 1 giáo viên theo ID
//kratos proto client ./api/helloworld/v1/teacher.proto
message GetTeacherRequest {
  int64 id = 1;
}

// Response khi trả về thông tin giáo viên
message TeacherReply {
  int64 id = 1;
  string name = 2;
  string email =3;
  string class_name = 4; 
  int32 age = 5;
}

// Request để tạo mới giáo viên
message CreateTeacherRequest {
  string name = 1;
  string email = 2;
  int32 class_id = 3;
  
}

message UpdateTeacherRequest {
  int64 id = 1;
  string name = 2;
  string email = 3;
  int32 grade = 4;
}

message DeleteTeacherRequest {
  int64 id = 1; // ID của giáo viên cần xóa
}

// Request để lấy danh sách tất cả giáo viên
message ListTeachersRequest {
  uint32 page =1 ;
  uint32 page_size=2;
  optional FilterTeacherRequest fitler =3;

}

message FilterTeacherRequest {
  optional int32 maxAge =1;
  optional int32 minAge =2;
  optional string email =3;
}


// Response khi tạo xong giáo viên
message CreateTeacherReply {
  string message = 1;
}

message DeleteTeacherReply {
  string message = 1; // Thông báo kết quả xóa
}

message UpdateTeacherReply {
  string message = 1; // Thông báo kết quả cập nhật
}




// Response trả về danh sách giáo viên
message ListTeachersReply {
  repeated TeacherReply teachers = 1;
}

// gRPC Service định nghĩa các hàm cho Teacher
service TeacherService {
  rpc GetTeacher(GetTeacherRequest) returns (TeacherReply){
    option (google.api.http) = {
            get : "api/v1/teacher/{id}",
            // body : "*"
        };
  }
  rpc CreateTeacher(CreateTeacherRequest) returns (CreateTeacherReply){
      option (google.api.http) = {
            post : "api/v1/teacher",
            body : "*"
        };
  }
  rpc ListTeachers(ListTeachersRequest) returns (ListTeachersReply){
      option (google.api.http) = {
            post: "api/v1/teacher/list",
            body : "*"
        };
  }
  rpc UpdateTeacher(UpdateTeacherRequest) returns (UpdateTeacherReply){
      option (google.api.http) = {
            put: "api/v1/teacher",
            body : "*"
        };
  }
  rpc DeleteTeacher(DeleteTeacherRequest) returns (DeleteTeacherReply){
      option (google.api.http) = {
            delete : "api/v1/teacher/{id}"
            // body : "*"
        };
  }
}


